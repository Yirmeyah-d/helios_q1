// Mocks generated by Mockito 5.1.0 from annotations
// in helios_q1/test/src/features/paginated_list/presentation/bloc/paginated_list_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:fpdart/fpdart.dart' as _i3;
import 'package:helios_q1/src/core/error/failures.dart' as _i6;
import 'package:helios_q1/src/core/network/network_info.dart' as _i8;
import 'package:helios_q1/src/features/paginated_list/domain/entities/user.dart'
    as _i7;
import 'package:helios_q1/src/features/paginated_list/domain/repositories/paginated_list_repository.dart'
    as _i2;
import 'package:helios_q1/src/features/paginated_list/domain/use_cases/fetch_next_result_page.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePaginatedListRepository_0 extends _i1.Fake
    implements _i2.PaginatedListRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [FetchNextResultsPage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchNextResultsPage extends _i1.Mock
    implements _i4.FetchNextResultsPage {
  MockFetchNextResultsPage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PaginatedListRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakePaginatedListRepository_0())
          as _i2.PaginatedListRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.User>>> call(
          _i4.Params? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i7.User>>>.value(
              _FakeEither_1<_i6.Failure, List<_i7.User>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.User>>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

// Mocks generated by Mockito 5.1.0 from annotations
// in helios_q1/test/src/features/settings/presentation/bloc/settings_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter/material.dart' as _i6;
import 'package:helios_q1/src/core/use_case/use_case.dart' as _i7;
import 'package:helios_q1/src/features/settings/domain/repositories/settings_repository.dart'
    as _i2;
import 'package:helios_q1/src/features/settings/domain/use_cases/load_theme_mode.dart'
    as _i5;
import 'package:helios_q1/src/features/settings/domain/use_cases/update_theme_mode.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSettingsRepository_0 extends _i1.Fake
    implements _i2.SettingsRepository {}

/// A class which mocks [UpdateThemeMode].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateThemeMode extends _i1.Mock implements _i3.UpdateThemeMode {
  MockUpdateThemeMode() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSettingsRepository_0()) as _i2.SettingsRepository);
  @override
  _i4.Future<void> call(_i3.Params? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [LoadThemeMode].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoadThemeMode extends _i1.Mock implements _i5.LoadThemeMode {
  MockLoadThemeMode() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeSettingsRepository_0()) as _i2.SettingsRepository);
  @override
  _i4.Future<_i6.ThemeMode> call(_i7.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i6.ThemeMode>.value(_i6.ThemeMode.system))
          as _i4.Future<_i6.ThemeMode>);
}
